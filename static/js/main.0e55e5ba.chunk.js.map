{"version":3,"sources":["convert.ts","components/ToneButtons.tsx","components/Output.tsx","components/Convert.tsx","components/App.tsx","index.tsx"],"names":["VOWELS","Object","freeze","Set","ToneButtons","handleClickButton","onClickButton","currentVowel","className","role","aria-label","type","onClick","style","color","value","Output","replace","IS_TOP_LEVEL","window","self","top","Convert","inputRef","React","inputValue","setInputValue","setCurrentVowel","handleChangeInput","e","currentTarget","preventDefault","currentInput","current","focus","document","execCommand","handleSelectInput","input","index","character","charAt","undefined","has","getVowelAt","selectionStart","length","htmlFor","ref","id","placeholder","onChange","onSelect","autoFocus","App","href","rootElement","getElementById","render"],"mappings":"0KAqBaA,EAASC,OAAOC,OAAO,IAAIC,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,OCqClDC,G,MA/CsB,SAAC,GAAwD,IAAvCC,EAAsC,EAArDC,cAAkCC,EAAmB,EAAnBA,aACxE,OACE,uBAAKC,UAAU,+BAA+BC,KAAK,QAAQC,aAAW,gBACpE,0BACEC,KAAK,SACLH,UAAU,sBACVI,QAASP,EACTQ,MAAO,CAAEC,MAAO,qBAChBC,MAAO,GAEP,4BAAOR,GAjBc,UDHP,UCoBuC,2BACrD,mCAEF,0BACEI,KAAK,SACLH,UAAU,sBACVI,QAASP,EACTQ,MAAO,CAAEC,MAAO,sBAChBC,MAAO,GAEP,4BAAOR,GA3Bc,UDDR,UC4BuC,2BACpD,mCAEF,0BACEI,KAAK,SACLH,UAAU,sBACVI,QAASP,EACTQ,MAAO,CAAEC,MAAO,uBAChBC,MAAO,GAEP,4BAAOR,GArCc,UDCR,UCoCuC,2BACpD,mCAEF,0BACEI,KAAK,SACLH,UAAU,sBACVI,QAASP,EACTQ,MAAO,CAAEC,MAAO,uBAChBC,MAAO,GAEP,4BAAOR,GA/Cc,UDGR,UC4CuC,2BACpD,sCCrCOS,EARiB,SAAC,GAAD,IAAGD,EAAH,EAAGA,MAAH,OAC9B,uBAAKP,UAAU,kBACb,0BAAQA,UAAU,aACPO,EFGVE,QAAQ,eAAgB,YACxBA,QAAQ,eAAgB,YACxBA,QAAQ,eAAgB,YACxBA,QAAQ,eAAgB,YACxBA,QAAQ,KAAM,iBACdA,QAAQ,KAAM,kBERM,6CCJZC,EAAeC,OAAOC,OAASD,OAAOE,IA4DpCC,EA1DW,WAExB,IAAMC,EAAWC,SAA+B,MAFlB,EAIMA,WAPT,cAGG,mBAIvBC,EAJuB,KAIXC,EAJW,OAKUF,WAA8B,MALxC,mBAKvBjB,EALuB,KAKToB,EALS,KAOxBC,EAAoBJ,eAA8D,SAACK,GACvFH,EAAcG,EAAEC,cAAcf,SAC7B,IACGV,EAAoBmB,eAA8D,SAACK,GACvFA,EAAEE,iBACF,IAAMC,EAAeT,EAASU,QACzBD,IACLA,EAAaE,QACbC,SAASC,YAAY,cAAc,EAAOP,EAAEC,cAAcf,UACzD,IACGsB,EAAoBb,eAA6D,SAACK,GACtF,IAAMG,EAAeT,EAASU,QACzBD,GACLL,EHLsB,SAACW,EAAeC,GACxC,IAAMC,EAAYF,EAAMG,OAAOF,GAC/B,YAAkBG,IAAdF,EAAgC,KAC/BxC,EAAO2C,IAAIH,GACTA,EAD4B,KGG/BI,CACEZ,EAAajB,MACmB,OAAhCiB,EAAaa,eACXb,EAAajB,MAAM+B,OACnBd,EAAaa,eAAiB,MAGnC,IACH,OACE,uBAAKrC,UAAU,WACb,uBAAKA,UAAU,mBACb,yBAAOuC,QAAQ,gBAAgBvC,UAAU,WAAzC,UAAiE,2BACjE,yBACEwC,IAAKzB,EACL0B,GAAG,gBACHzC,UAAU,+BACVG,KAAK,OACLuC,YAAY,eACZnC,MAAOU,EACP0B,SAAUvB,EACVwB,SAAUf,EACVgB,UAAWnC,KAGf,uBAAKV,UAAU,QACb,gBAAC,EAAD,CACEF,cAAeD,EACfE,aAAcA,KAGlB,uBAAKC,UAAU,QACb,gBAAC,EAAD,CAAQO,MAAOU,OC/CR6B,EAVO,kBACpB,uBAAK9C,UAAU,sBACb,qBAAG+C,KAAK,qBAAqB/C,UAAU,kBAAvC,oBACA,2CACA,2BAASA,UAAU,QACjB,gBAAC,EAAD,SCHAgD,G,MAAcrB,SAASsB,eAAe,SAC5CC,iBAAO,gBAAC,EAAD,MAASF,I","file":"static/js/main.0e55e5ba.chunk.js","sourcesContent":["/** Tone 1 e.g. Mā */\nexport const MACRON = '\\u0304';\n/** Tone 2 e.g. Má */\nexport const ACUTE = '\\u0301';\n/** Tone 3 e.g. Mǎ */\nexport const CARON = '\\u030c';\n/** Tone 4 e.g. Mà */\nexport const GRAVE = '\\u0300';\n/** E.g. Nü */\nexport const UMLAUT = '\\u0308';\n\nexport const convert = (input: string) => (\n  input\n    .replace(/([aeiou])1/ig, '$1\\u0304')\n    .replace(/([aeiou])2/ig, '$1\\u0301')\n    .replace(/([aeiou])3/ig, '$1\\u030c')\n    .replace(/([aeiou])4/ig, '$1\\u0300')\n    .replace(/v/g, 'u\\u0308\\u030c')\n    .replace(/V/g, 'U\\u0308\\u030c')\n);\n\nexport const VOWELS = Object.freeze(new Set(['a', 'e', 'i', 'o', 'u']));\n\nexport const getVowelAt = (input: string, index: number) => {\n  const character = input.charAt(index);\n  if (character === undefined) return null;\n  if (!VOWELS.has(character)) return null;\n  return character;\n};\n","import * as React from 'react';\r\nimport { ACUTE, CARON, GRAVE, MACRON } from '../convert';\r\nimport './ToneButtons.css';\r\n\r\nexport const DOTTED_CIRCLE = '\\u25cc';\r\n\r\nexport interface Props {\r\n  onClickButton: React.MouseEventHandler;\r\n  currentVowel: string | null;\r\n}\r\n\r\nconst ToneButtons: React.FC<Props> = ({ onClickButton: handleClickButton, currentVowel }) => {\r\n  return (\r\n    <div className=\"ToneButtons btn-group d-flex\" role=\"group\" aria-label=\"Tone buttons\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-dark btn-lg\"\r\n        onClick={handleClickButton}\r\n        style={{ color: 'hsl(0, 100%, 80%)' }}\r\n        value={1}\r\n      >\r\n        <big>{(currentVowel || DOTTED_CIRCLE) + MACRON}</big><br />\r\n        <small>1</small>\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-dark btn-lg\"\r\n        onClick={handleClickButton}\r\n        style={{ color: 'hsl(50, 100%, 80%)' }}\r\n        value={2}\r\n      >\r\n        <big>{(currentVowel || DOTTED_CIRCLE) + ACUTE}</big><br />\r\n        <small>2</small>\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-dark btn-lg\"\r\n        onClick={handleClickButton}\r\n        style={{ color: 'hsl(100, 100%, 80%)' }}\r\n        value={3}\r\n      >\r\n        <big>{(currentVowel || DOTTED_CIRCLE) + CARON}</big><br />\r\n        <small>3</small>\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-dark btn-lg\"\r\n        onClick={handleClickButton}\r\n        style={{ color: 'hsl(200, 100%, 80%)' }}\r\n        value={4}\r\n      >\r\n        <big>{(currentVowel || DOTTED_CIRCLE) + GRAVE}</big><br />\r\n        <small>4</small>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToneButtons;\r\n","import * as React from 'react';\r\nimport { convert } from '../convert';\r\n\r\nexport interface Props {\r\n  value: string;\r\n}\r\n\r\nconst Output: React.FC<Props> = ({ value }) => (\r\n  <div className=\"card card-body\">\r\n    <output className=\"display-4\">\r\n      {convert(value) || <>&zwj;</>}\r\n    </output>\r\n  </div>\r\n);\r\n\r\nexport default Output;\r\n","import * as React from 'react';\nimport { getVowelAt } from '../convert';\nimport ToneButtons from './ToneButtons';\nimport Output from './Output';\n\nexport const DEFAULT_VALUE = 'nv ha2i zi';\nexport const IS_TOP_LEVEL = window.self === window.top;\n\nconst Convert: React.FC = () => {\n  // Refs\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  // State\n  const [inputValue, setInputValue] = React.useState(DEFAULT_VALUE);\n  const [currentVowel, setCurrentVowel] = React.useState<string | null>(null);\n  // Handlers\n  const handleChangeInput = React.useCallback<React.ChangeEventHandler<HTMLInputElement>>((e) => {\n    setInputValue(e.currentTarget.value);\n  }, []);\n  const handleClickButton = React.useCallback<React.MouseEventHandler<HTMLButtonElement>>((e) => {\n    e.preventDefault();\n    const currentInput = inputRef.current;\n    if (!currentInput) return;\n    currentInput.focus();\n    document.execCommand('insertText', false, e.currentTarget.value);\n  }, []);\n  const handleSelectInput = React.useCallback<React.ReactEventHandler<HTMLInputElement>>((e) => {\n    const currentInput = inputRef.current;\n    if (!currentInput) return;\n    setCurrentVowel(\n      getVowelAt(\n        currentInput.value,\n        currentInput.selectionStart === null ?\n          currentInput.value.length :\n          currentInput.selectionStart - 1\n      )\n    );\n  }, []);\n  return (\n    <div className=\"Convert\">\n      <div className=\"form-group my-4\">\n        <label htmlFor=\"Convert-input\" className=\"sr-only\">Pinyin</label><br />\n        <input\n          ref={inputRef}\n          id=\"Convert-input\"\n          className=\"form-control form-control-lg\"\n          type=\"text\"\n          placeholder=\"Enter pinyin\"\n          value={inputValue}\n          onChange={handleChangeInput}\n          onSelect={handleSelectInput}\n          autoFocus={IS_TOP_LEVEL}\n        />\n      </div>\n      <div className=\"my-4\">\n        <ToneButtons\n          onClickButton={handleClickButton}\n          currentVowel={currentVowel}\n        />\n      </div>\n      <div className=\"my-4\">\n        <Output value={inputValue} />\n      </div>\n    </div>\n  );\n};\n\nexport default Convert;\n","import * as React from 'react';\nimport Convert from './Convert';\n\nconst App: React.FC = () => (\n  <div className=\"App container my-5\">\n    <a href=\"https://skeoh.com/\" className=\"text-secondary\">&larr; skeoh.com</a>\n    <h1>Chinese Tones</h1>\n    <section className=\"my-5\">\n      <Convert />\n    </section>\n  </div>\n);\n\nexport default App;\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}