{"version":3,"sources":["convert.ts","components/SelectionInput.tsx","components/ToneButton.tsx","components/Convert.tsx","components/App.tsx","index.tsx"],"names":["convert","input","replace","_","vowel","tone","Error","toneToChar","Number","VOWELS","Object","freeze","Set","SelectionInput","React","props","forwardedRef","ref","selectionStart","setSelectionStart","selectionEnd","setSelectionEnd","onSelect","rest","el","current","e","ToneButton","type","className","ToneButton1","currentVowel","value","style","color","ToneButton2","ToneButton3","ToneButton4","ToneButtons","Convert","inputRef","inputValue","setInputValue","length","index","character","charAt","undefined","has","getVowelAt","output","htmlFor","id","placeholder","onChange","currentTarget","autoFocus","role","aria-label","onClick","preventDefault","currentInput","slice","cursorPosition","focus","App","href","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.5e236998.chunk.js","sourcesContent":["/** Tone 1 e.g. Mā */\nexport const MACRON = '\\u0304';\n/** Tone 2 e.g. Má */\nexport const ACUTE = '\\u0301';\n/** Tone 3 e.g. Mǎ */\nexport const CARON = '\\u030c';\n/** Tone 4 e.g. Mà */\nexport const GRAVE = '\\u0300';\n/** E.g. Nü */\nexport const UMLAUT = '\\u0308';\n\nexport const toneToChar = (tone: number) => {\n  switch (tone) {\n    case 1: return MACRON;\n    case 2: return ACUTE;\n    case 3: return CARON;\n    case 4: return GRAVE;\n  }\n  throw new Error('Expected a number from 1 to 4');\n};\n\nexport const convert = (input: string) => {\n  const output = input\n    .replace(/([aeiou])([1-4])/ig, (_, vowel, tone) => (\n      vowel + toneToChar(Number(tone))\n    ))\n    .replace(/v/g, 'u' + UMLAUT + CARON);\n  return output;\n};\n\nexport const VOWELS = Object.freeze(new Set(['a', 'e', 'i', 'o', 'u']));\n\nexport const getVowelAt = (input: string, index: number) => {\n  const character = input.charAt(index);\n  if (character === undefined) return null;\n  if (!VOWELS.has(character)) return null;\n  return character;\n};\n","import * as React from 'react';\n\nexport interface Props extends React.InputHTMLAttributes<HTMLInputElement> {\n  selectionStart: number;\n  setSelectionStart: React.Dispatch<React.SetStateAction<number>>;\n  selectionEnd: number;\n  setSelectionEnd: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst SelectionInput = React.forwardRef<HTMLInputElement | null, Props>((props, forwardedRef) => {\n  const ref = forwardedRef as React.MutableRefObject<HTMLInputElement | null>;\n\n  const {\n    selectionStart,\n    setSelectionStart,\n    selectionEnd,\n    setSelectionEnd,\n    onSelect,\n    ...rest\n  } = props;\n\n  React.useEffect(() => {\n    const el = ref.current;\n    if (!el) return;\n    el.selectionStart = selectionStart;\n    el.selectionEnd = selectionEnd;\n  }, [ref, selectionStart, selectionEnd]);\n\n  const handleSelect: React.ReactEventHandler<HTMLInputElement> = (e) => {\n    const el = ref.current;\n    if (!el) return;\n    if (!el.selectionStart) return;\n    if (!el.selectionEnd) return;\n    setSelectionStart(el.selectionStart);\n    setSelectionEnd(el.selectionEnd);\n    if (onSelect) onSelect(e);\n  };\n\n  return <input ref={ref} onSelect={handleSelect} {...rest} />;\n});\n\nexport default SelectionInput;\n","import * as React from 'react';\nimport { ACUTE, CARON, GRAVE, MACRON } from '../convert';\n\nexport const DOTTED_CIRCLE = '\\u25cc';\n\nexport interface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  currentVowel?: string | null;\n}\n\nconst ToneButton: React.FC<Props> = (props) => (\n  <button type=\"button\" className=\"btn btn-light\" {...props} />\n);\n\nexport default ToneButton;\n\nexport const ToneButton1: React.FC<Props> = ({ currentVowel, ...props }) => (\n  <ToneButton value={1} style={{ color: 'red' }} {...props}>\n    <big>{(currentVowel || DOTTED_CIRCLE) + MACRON}</big><br /><small>1</small>\n  </ToneButton>\n);\n\nexport const ToneButton2: React.FC<Props> = ({ currentVowel, ...props }) => (\n  <ToneButton value={2} style={{ color: 'orange' }} {...props}>\n    <big>{(currentVowel || DOTTED_CIRCLE) + ACUTE}</big><br /><small>2</small>\n  </ToneButton>\n);\n\nexport const ToneButton3: React.FC<Props> = ({ currentVowel, ...props }) => (\n  <ToneButton value={3} style={{ color: 'green' }} {...props}>\n    <big>{(currentVowel || DOTTED_CIRCLE) + CARON}</big><br /><small>3</small>\n  </ToneButton>\n);\n\nexport const ToneButton4: React.FC<Props> = ({ currentVowel, ...props }) => (\n  <ToneButton value={4} style={{ color: 'blue' }} {...props}>\n    <big>{(currentVowel || DOTTED_CIRCLE) + GRAVE}</big><br /><small>4</small>\n  </ToneButton>\n);\n\nexport const ToneButtons: React.FC<Props> = (props) => (\n  <>\n    <ToneButton1 {...props} />\n    <ToneButton2 {...props} />\n    <ToneButton3 {...props} />\n    <ToneButton4 {...props} />\n  </>\n);\n","import * as React from 'react';\nimport { convert, getVowelAt } from '../convert';\nimport SelectionInput from './SelectionInput';\nimport { ToneButtons } from './ToneButton';\n\nexport const DEFAULT_VALUE = 'nv ha2i zi';\n\nconst Convert: React.FC = () => {\n  // Refs\n  const inputRef = React.useRef<HTMLInputElement | null>(null);\n  // State\n  const [inputValue, setInputValue] = React.useState(DEFAULT_VALUE);\n  const [selectionStart, setSelectionStart] = React.useState(DEFAULT_VALUE.length);\n  const [selectionEnd, setSelectionEnd] = React.useState(DEFAULT_VALUE.length);\n  // Handlers\n  const handleChangeInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    setInputValue(e.currentTarget.value);\n  };\n  const handleClickButton: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    const currentInput = inputRef.current;\n    if (!currentInput) return;\n    setInputValue(\n      // Everything before the cursor\n      inputValue.slice(0, selectionStart || 0) +\n      // The number corresponding to the clicked button\n      e.currentTarget.value +\n      // Everything after the cursor\n      inputValue.slice(selectionEnd || 0)\n    );\n    const cursorPosition = (selectionStart || 0) + 1;\n    setSelectionStart(cursorPosition);\n    setSelectionEnd(cursorPosition);\n    currentInput.focus();\n  };\n  // Change the tone buttons to match the vowel at the cursor position\n  const currentVowel = getVowelAt(inputValue, selectionStart - 1);\n  // Add diacritics to input value\n  const output = convert(inputValue);\n  return (\n    <div className=\"Convert\">\n      <div className=\"Convert-input-group form-group\">\n        <label htmlFor=\"Convert-input\" className=\"sr-only\">Pinyin</label><br />\n        <SelectionInput\n          ref={inputRef}\n          id=\"Convert-input\"\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Enter pinyin\"\n          value={inputValue}\n          onChange={handleChangeInput}\n          autoFocus={true}\n          selectionStart={selectionStart}\n          setSelectionStart={setSelectionStart}\n          selectionEnd={selectionEnd}\n          setSelectionEnd={setSelectionEnd}\n        />\n      </div>\n      <div className=\"btn-group d-flex mt-3 mb-3\" role=\"group\" aria-label=\"Tone buttons\">\n        <ToneButtons currentVowel={currentVowel} onClick={handleClickButton} />\n      </div>\n      <div className=\"Convert-output-group card card-body\">\n        <output className=\"display-4\">\n          {output || <>&zwj;</>}\n        </output>\n      </div>\n    </div>\n  );\n};\n\nexport default Convert;\n","import * as React from 'react';\nimport Convert from './Convert';\n\nconst App: React.FC = () => (\n  <div className=\"App container mt-5 mb-5\">\n    <a href=\"https://skeoh.com/\" className=\"text-secondary\">&larr; skeoh.com</a>\n    <h1>Chinese Tones</h1>\n    <section className=\"mt-5 mb-5\">\n      <Convert />\n    </section>\n  </div>\n);\n\nexport default App;\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}