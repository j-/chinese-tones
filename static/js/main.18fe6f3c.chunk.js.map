{"version":3,"sources":["components/ToneButton.tsx","components/Convert.tsx","convert.ts","components/App.tsx","index.tsx"],"names":["ToneButton","props","type","className","ToneButton1","value","DOTTED_CIRCLE","ToneButton2","ToneButton3","ToneButton4","Convert","inputRef","React","inputValue","setInputValue","length","cursorPosition","setCursorPosition","handleClickButton","e","preventDefault","currentInput","current","slice","selectionStart","currentTarget","selectionEnd","focus","output","replace","htmlFor","ref","id","placeholder","onChange","autoFocus","role","aria-label","onClick","App","href","rootElement","document","getElementById","render"],"mappings":"qJAOMA,EAA8B,SAACC,GAAD,OAClC,wCAAQC,KAAK,SAASC,UAAU,iBAAoBF,KAKzCG,EAA+B,SAACH,GAAD,OAC1C,gBAAC,EAAD,eAAYI,MAAO,GAAOJ,GACxB,2BAAMK,gBAA6B,2BAAM,oCAIhCC,EAA+B,SAACN,GAAD,OAC1C,gBAAC,EAAD,eAAYI,MAAO,GAAOJ,GACxB,2BAAMK,gBAA4B,2BAAM,oCAI/BE,EAA+B,SAACP,GAAD,OAC1C,gBAAC,EAAD,eAAYI,MAAO,GAAOJ,GACxB,2BAAMK,gBAA4B,2BAAM,oCAI/BG,EAA+B,SAACR,GAAD,OAC1C,gBAAC,EAAD,eAAYI,MAAO,GAAOJ,GACxB,2BAAMK,gBAA4B,2BAAM,oCCwC7BI,EAnEW,WAExB,IAAMC,EAAWC,SAAsC,MAFzB,EAIMA,WANT,iBAEG,mBAIvBC,EAJuB,KAIXC,EAJW,OAKcF,WAPjB,gBAO8CG,QAL3C,mBAKvBC,EALuB,KAKPC,EALO,KAUxBC,EAAgE,SAACC,GACrEA,EAAEC,iBACF,IAAMC,EAAeV,EAASW,QACzBD,GAILP,EAEED,EAAWU,MAAM,EAAGF,EAAaG,gBAAkB,GAEnDL,EAAEM,cAAcpB,MAEhBQ,EAAWU,MAAMF,EAAaK,cAAgB,IAEhDT,GAAmBI,EAAaG,gBAAkB,GAAK,GACvDH,EAAaM,SAZXb,EAAcD,EAAaM,EAAEM,cAAcpB,QAezCuB,EAAiBf,ECtBpBgB,QAAQ,KAZS,UAajBA,QAAQ,KAXQ,UAYhBA,QAAQ,KAVQ,UAWhBA,QAAQ,KATQ,UAUhBA,QAAQ,KAAM,iBD0BjB,OANAjB,aAAgB,WACd,IAAMS,EAAeV,EAASW,QACzBD,IACLA,EAAaG,eAAiBR,EAC9BK,EAAaK,aAAeV,KAC3B,CAACA,IAEF,uBAAKb,UAAU,WACb,uBAAKA,UAAU,kCACb,yBAAO2B,QAAQ,gBAAgB3B,UAAU,WAAzC,UAAiE,2BACjE,yBACE4B,IAAKpB,EACLqB,GAAG,gBACH7B,UAAU,eACVD,KAAK,OACL+B,YAAY,eACZ5B,MAAOQ,EACPqB,SAzC8D,SAACf,GACrEL,EAAcK,EAAEM,cAAcpB,QAyCxB8B,WAAW,KAGf,uBAAKhC,UAAU,6BAA6BiC,KAAK,QAAQC,aAAW,gBAClE,gBAAC,EAAD,CAAaC,QAASpB,IACtB,gBAAC,EAAD,CAAaoB,QAASpB,IACtB,gBAAC,EAAD,CAAaoB,QAASpB,IACtB,gBAAC,EAAD,CAAaoB,QAASpB,KAExB,uBAAKf,UAAU,uCACb,0BAAQA,UAAU,aACfyB,GAAU,8CErDNW,EAVO,kBACpB,uBAAKpC,UAAU,2BACb,qBAAGqC,KAAK,qBAAqBrC,UAAU,kBAAvC,oBACA,2CACA,2BAASA,UAAU,aACjB,gBAAC,EAAD,SCHAsC,G,MAAcC,SAASC,eAAe,SAC5CC,iBAAO,gBAAC,EAAD,MAASH,I","file":"static/js/main.18fe6f3c.chunk.js","sourcesContent":["import * as React from 'react';\nimport { ACUTE, CARON, GRAVE, MACRON } from '../convert';\n\nexport const DOTTED_CIRCLE = '\\u25cc';\n\nexport interface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\nconst ToneButton: React.FC<Props> = (props) => (\n  <button type=\"button\" className=\"btn btn-light\" {...props} />\n);\n\nexport default ToneButton;\n\nexport const ToneButton1: React.FC<Props> = (props) => (\n  <ToneButton value={1} {...props}>\n    <big>{DOTTED_CIRCLE + MACRON}</big><br /><small>1</small>\n  </ToneButton>\n);\n\nexport const ToneButton2: React.FC<Props> = (props) => (\n  <ToneButton value={2} {...props}>\n    <big>{DOTTED_CIRCLE + ACUTE}</big><br /><small>2</small>\n  </ToneButton>\n);\n\nexport const ToneButton3: React.FC<Props> = (props) => (\n  <ToneButton value={3} {...props}>\n    <big>{DOTTED_CIRCLE + CARON}</big><br /><small>3</small>\n  </ToneButton>\n);\n\nexport const ToneButton4: React.FC<Props> = (props) => (\n  <ToneButton value={4} {...props}>\n    <big>{DOTTED_CIRCLE + GRAVE}</big><br /><small>4</small>\n  </ToneButton>\n);\n","import * as React from 'react';\nimport { convert } from '../convert';\nimport { ToneButton1, ToneButton2, ToneButton3, ToneButton4 } from './ToneButton';\n\nexport const DEFAULT_VALUE = 'wo3 de ma1ma1';\n\nconst Convert: React.FC = () => {\n  // Refs\n  const inputRef = React.useRef<HTMLInputElement | null>(null);\n  // State\n  const [inputValue, setInputValue] = React.useState(DEFAULT_VALUE);\n  const [cursorPosition, setCursorPosition] = React.useState(DEFAULT_VALUE.length);\n  // Handlers\n  const handleChangeInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    setInputValue(e.currentTarget.value);\n  };\n  const handleClickButton: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    const currentInput = inputRef.current;\n    if (!currentInput) {\n      setInputValue(inputValue + e.currentTarget.value);\n      return;\n    }\n    setInputValue(\n      // Everything before the cursor\n      inputValue.slice(0, currentInput.selectionStart || 0) +\n      // The number corresponding to the clicked button\n      e.currentTarget.value +\n      // Everything after the cursor\n      inputValue.slice(currentInput.selectionEnd || 0)\n    );\n    setCursorPosition((currentInput.selectionStart || 0) + 1);\n    currentInput.focus();\n  };\n  // Add diacritics to input value\n  const output = convert(inputValue);\n  // Set the input ref cursor position\n  React.useEffect(() => {\n    const currentInput = inputRef.current;\n    if (!currentInput) return;\n    currentInput.selectionStart = cursorPosition;\n    currentInput.selectionEnd = cursorPosition;\n  }, [cursorPosition]);\n  return (\n    <div className=\"Convert\">\n      <div className=\"Convert-input-group form-group\">\n        <label htmlFor=\"Convert-input\" className=\"sr-only\">Pinyin</label><br />\n        <input\n          ref={inputRef}\n          id=\"Convert-input\"\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Enter pinyin\"\n          value={inputValue}\n          onChange={handleChangeInput}\n          autoFocus={true}\n        />\n      </div>\n      <div className=\"btn-group d-flex mt-3 mb-3\" role=\"group\" aria-label=\"Tone buttons\">\n        <ToneButton1 onClick={handleClickButton} />\n        <ToneButton2 onClick={handleClickButton} />\n        <ToneButton3 onClick={handleClickButton} />\n        <ToneButton4 onClick={handleClickButton} />\n      </div>\n      <div className=\"Convert-output-group card card-body\">\n        <output className=\"display-4\">\n          {output || <>&zwj;</>}\n        </output>\n      </div>\n    </div>\n  );\n};\n\nexport default Convert;\n","/** Tone 1 e.g. Mā */\nexport const MACRON = '\\u0304';\n/** Tone 2 e.g. Má */\nexport const ACUTE = '\\u0301';\n/** Tone 3 e.g. Mǎ */\nexport const CARON = '\\u030c';\n/** Tone 4 e.g. Mà */\nexport const GRAVE = '\\u0300';\n/** E.g. Nü */\nexport const UMLAUT = '\\u0308';\n\nexport const convert = (input: string) => {\n  const output = input\n    .replace(/1/g, MACRON)\n    .replace(/2/g, ACUTE)\n    .replace(/3/g, CARON)\n    .replace(/4/g, GRAVE)\n    .replace(/v/g, 'u' + UMLAUT + CARON);\n  return output;\n};\n","import * as React from 'react';\nimport Convert from './Convert';\n\nconst App: React.FC = () => (\n  <div className=\"App container mt-5 mb-5\">\n    <a href=\"https://skeoh.com/\" className=\"text-secondary\">&larr; skeoh.com</a>\n    <h1>Chinese Tones</h1>\n    <section className=\"mt-5 mb-5\">\n      <Convert />\n    </section>\n  </div>\n);\n\nexport default App;\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}